{"version":3,"sources":["types/actions.ts","redux/messages/messagesReducers.ts","redux/modalViewImage/modalViewImageReducers.ts","redux/store.ts","components/shared/Message/Message.tsx","components/elements/MessageList/MessageList.tsx","components/elements/MessageInput/MessageInput.tsx","components/elements/MessageDND/MessageDND.tsx","components/elements/ModalViewImage/ModalViewImage.tsx","redux/messages/messagesActions.ts","redux/modalViewImage/modalViewImageActions.ts","screen/HomeScreen/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ADD_MESSAGE","OPEN_MODAL","CLOSE_MODAL","initialState","isOpen","img","editable","persistedReducer","combineReducers","messagesStore","state","action","type","payload","id","modalViewImageStore","logger","createLogger","middleWares","compose","applyMiddleware","reduxThunk","promise","store","createStore","Message","imgs","className","this","props","message","text","files","forEach","file","reader","FileReader","readAsDataURL","onloadend","Date","now","setState","prevState","concat","src","result","alt","key","lastModified","name","onClick","openModal","String","React","PureComponent","MessageList","Object","values","messages","map","MessageInput","handleChange","e","target","value","handleSubmit","preventDefault","length","addMessage","clearFiles","onSubmit","multiple","accept","onChange","handleFiles","htmlFor","style","fontSize","autoComplete","placeholder","MessageDND","previewFiles","handlerFunction","console","log","handleDrop","dataTransfer","uploadFile","previewFile","stopPropagation","dropArea","document","getElementById","highlight","classList","add","unhighlight","remove","eventName","addEventListener","preventDefaults","ModalViewImage","canvas","ctx","flag","prevX","currX","prevY","currY","x","findxy","res","clientX","offsetLeft","clientY","offsetTop","beginPath","fillStyle","fillRect","closePath","moveTo","lineTo","strokeStyle","lineWidth","stroke","imgDraw","Image","onLoad","getContext","drawImage","width","height","init","closeModal","display","dispatch","HomeScreen","background","Component","connect","bindActionCreators","App","rel","href","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a6144f82.chunk.js","sourcesContent":["export const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nexport const OPEN_MODAL = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';","import { ADD_MESSAGE } from '../../types/actions';\r\nimport { MessagesStore } from '../../types/store';\r\n\r\nconst initialState: MessagesStore = {};\r\n\r\nexport function messagesReducer(state = initialState, action): MessagesStore {\r\n\tconst { type, payload } = action;\r\n\tswitch (type) {\r\n\tcase ADD_MESSAGE:\r\n\t\treturn {\r\n\t\t\t[payload.id]: payload,\r\n\t\t\t...state\r\n\t\t};\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}","import { OPEN_MODAL, CLOSE_MODAL } from '../../types/actions';\r\nimport { ModalViewImageStore } from '../../types/store';\r\n\r\nconst initialState: ModalViewImageStore = {\r\n\tisOpen: false,\r\n\timg: null,\r\n\teditable: false\r\n};\r\n\r\nexport function modalViewImageReducer(state = initialState, action): ModalViewImageStore {\r\n\tconst { type, payload } = action;\r\n\tswitch (type) {\r\n\tcase OPEN_MODAL:\r\n\t\treturn {\r\n\t\t\tisOpen: true,\r\n\t\t\timg: payload.img,\r\n\t\t\teditable: payload.editable\r\n\t\t};\r\n\tcase CLOSE_MODAL:\r\n\t\treturn {\r\n\t\t\tisOpen: false,\r\n\t\t\timg: null,\r\n\t\t\teditable: false\r\n\t\t};\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport reduxThunk from 'redux-thunk';\r\nimport promise from 'redux-promise';\r\n\r\nimport { messagesReducer } from './messages/messagesReducers';\r\nimport { modalViewImageReducer } from './modalViewImage/modalViewImageReducers';\r\n\r\nconst persistedReducer = combineReducers({\r\n\tmessagesStore: messagesReducer,\r\n\tmodalViewImageStore: modalViewImageReducer,\r\n});\r\n\r\nconst logger = createLogger();\r\nconst middleWares = compose(applyMiddleware(reduxThunk, promise, logger));\r\n\r\nconst store = createStore(\r\n\tpersistedReducer,\r\n\tmiddleWares,\r\n);\r\n\r\nexport { store };","import React from 'react';\r\nimport { MessageValue } from '../../../types/store';\r\nimport './Message.css';\r\n\r\ninterface MessageProps {\r\n\tmessage: MessageValue;\r\n\topenModal(img: string, editable: boolean): void;\r\n}\r\n\r\ninterface MessageState {\r\n\timgs: Array<React.ReactElement>;\r\n}\r\n\r\nexport default class Message extends React.PureComponent<MessageProps, MessageState> {\r\n\tstate = {\r\n\t\timgs: []\r\n\t}\r\n\trender(): React.ReactElement {\r\n\t\treturn (\r\n\t\t\t<div className=\"bodyMessage\">\r\n\t\t\t\t<div className=\"textMessage\">{this.props.message.text}\r\n\t\t\t\t\t{this.state.imgs}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tconst { files } = this.props.message;\r\n\t\tfiles.forEach(\r\n\t\t\tfile => {\r\n\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\treader.readAsDataURL(file);\r\n\t\t\t\treader.onloadend = (): void => {\r\n\t\t\t\t\tconst id = Date.now();\r\n\t\t\t\t\tthis.setState(prevState => ({\r\n\t\t\t\t\t\timgs: prevState.imgs.concat(\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={`${reader.result}`}\r\n\t\t\t\t\t\t\t\tclassName=\"imageMessage\"\r\n\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\tkey={file.lastModified + file.name + id}\r\n\t\t\t\t\t\t\t\tonClick={(): void => this.props.openModal(String(reader.result), false)} />)\r\n\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport Message from '../../shared/Message/Message';\r\nimport { MessagesStore } from '../../../types/store';\r\nimport './MessageList.css';\r\n\r\ninterface MessageListProps {\r\n\tmessages: MessagesStore;\r\n\topenModal(img: string, editable: boolean): void;\r\n}\r\n\r\nexport default class MessageList extends React.PureComponent<MessageListProps> {\r\n\trender(): React.ReactElement {\r\n\t\treturn (\r\n\t\t\t<div className=\"divMessageList\">\r\n\t\t\t\t{Object.values(this.props.messages).map(message =>\r\n\t\t\t\t\t<Message message={message} key={message.id} openModal={this.props.openModal}/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport { MessageValue } from '../../../types/store';\r\nimport './MessageInput.css';\r\n\r\ninterface MessageInputProps {\r\n\taddMessage(message: MessageValue): void;\r\n\thandleFiles(files): void;\r\n\tclearFiles(): void;\r\n\tfiles: Array<File>;\r\n}\r\n\r\ninterface MessageInputState {\r\n\ttext: string;\r\n}\r\n\r\nexport default class MessageInput extends React.PureComponent<MessageInputProps, MessageInputState> {\r\n\tstate = { text: '' };\r\n\r\n\thandleChange = (e): void => {\r\n\t\tthis.setState({ text: e.target.value });\r\n\t}\r\n\r\n\thandleSubmit = (e): void => {\r\n\t\te.preventDefault();\r\n\t\tif (!(this.state.text.length || this.props.files.length)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst message = { text: this.state.text, id: Date.now(), files: this.props.files };\r\n\t\tthis.props.addMessage(message);\r\n\r\n\t\tthis.setState({\r\n\t\t\ttext: ''\r\n\t\t});\r\n\t\tthis.props.clearFiles();\r\n\t}\r\n\r\n\trender(): React.ReactElement {\r\n\t\treturn (\r\n\t\t\t<form className=\"form\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t<input type=\"file\" id=\"fileElem\" multiple accept=\"image/*\" onChange={this.props.handleFiles} />\r\n\t\t\t\t<label className=\"button\" htmlFor=\"fileElem\">\r\n\t\t\t\t\t<i className=\"fa fa-paperclip\" style={{ fontSize: '24px' }} />\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tclassName=\"input\"\r\n\t\t\t\t\tplaceholder='Напишите сообщение...'\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\tvalue={this.state.text}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"send\" onClick={this.handleSubmit} >\r\n\t\t\t\t\t<i className=\"fa fa-send-o\" style={{ fontSize: '24px' }} />\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport { MessageValue } from '../../../types/store';\r\nimport MessageInput from '../MessageInput/MessageInput';\r\nimport './MessageDND.css';\r\n\r\ninterface MessageDNDProps {\r\n\taddMessage(message: MessageValue): void;\r\n\topenModal(img: string, editable: boolean): void;\r\n}\r\n\r\ninterface MessageDNDState {\r\n\tfiles: Array<File>;\r\n\tpreviewFiles: Array<React.ReactElement>;\r\n}\r\n\r\nexport default class MessageDND extends React.PureComponent<MessageDNDProps, MessageDNDState> {\r\n\tstate = { files: [], previewFiles: [] };\r\n\r\n\thandlerFunction = (e): void => {\r\n\t\tconsole.log(e);\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\thandleDrop = (e): void => {\r\n\t\tconst dt = e.dataTransfer;\r\n\t\tconst files = dt.files;\r\n\t\tthis.uploadFile(files);\r\n\t};\r\n\r\n\thandleFiles = (files): void => {\r\n\t\tthis.uploadFile(files.target.files);\r\n\t\tfiles.target.value = null;\r\n\t}\r\n\r\n\tuploadFile = (files): void => {\r\n\t\tfiles = [...files];\r\n\t\tthis.previewFile(files);\r\n\t\tthis.setState((prevState) => ({ files: prevState.files.concat(files) }));\r\n\t}\r\n\r\n\tpreviewFile = (files): void => {\r\n\t\tfiles.forEach(file => {\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.readAsDataURL(file);\r\n\t\t\treader.onloadend = (): void => {\r\n\t\t\t\tconst id = Date.now();\r\n\t\t\t\tthis.setState(prevState => ({\r\n\t\t\t\t\tpreviewFiles: prevState.previewFiles.concat(\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={reader.result as string}\r\n\t\t\t\t\t\t\tclassName=\"image\"\r\n\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\tkey={file.lastModified + file.name + id}\r\n\t\t\t\t\t\t\tonClick={(): void => this.props.openModal(String(reader.result), true)} />\r\n\t\t\t\t\t)\r\n\t\t\t\t}));\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tclearFiles = (): void => {\r\n\t\tthis.setState({ files: [], previewFiles: [] });\r\n\t}\r\n\r\n\trender(): React.ReactElement {\r\n\t\treturn (\r\n\t\t\t<div id=\"drop-area\">\r\n\t\t\t\t<MessageInput\r\n\t\t\t\t\thandleFiles={this.handleFiles}\r\n\t\t\t\t\taddMessage={this.props.addMessage}\r\n\t\t\t\t\tclearFiles={this.clearFiles}\r\n\t\t\t\t\tfiles={this.state.files}/>\r\n\t\t\t\t<div id=\"gallery\">\r\n\t\t\t\t\t{this.state.previewFiles}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpreventDefaults(e): void {\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tconst dropArea = document.getElementById('drop-area');\r\n\r\n\t\tfunction highlight(): void {\r\n\t\t\tdropArea.classList.add('highlight');\r\n\t\t}\r\n\t\tfunction unhighlight(): void {\r\n\t\t\tdropArea.classList.remove('highlight');\r\n\t\t}\r\n\r\n\t\t['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\r\n\t\t\tdropArea.addEventListener(eventName, this.preventDefaults, false);\r\n\t\t});\r\n\t\t['dragenter', 'dragover'].forEach(eventName => {\r\n\t\t\tdropArea.addEventListener(eventName, highlight, false);\r\n\t\t});\r\n\t\t['dragleave', 'drop'].forEach(eventName => {\r\n\t\t\tdropArea.addEventListener(eventName, unhighlight, false);\r\n\t\t});\r\n\t\tdropArea.addEventListener('drop', this.handleDrop, false);\r\n\t}\r\n}","import React from 'react';\r\nimport { ModalViewImageStore } from '../../../types/store';\r\nimport './ModalViewImage.css';\r\n\r\ninterface ModalViewImageProps {\r\n\tmodalViewImageStore: ModalViewImageStore;\r\n\tcloseModal(): void;\r\n}\r\n\r\nexport default class ModalViewImage extends React.PureComponent<ModalViewImageProps> {\r\n\trender(): React.ReactElement {\r\n\t\tlet canvas, ctx, flag = false,\r\n\t\t\tprevX = 0,\r\n\t\t\tcurrX = 0,\r\n\t\t\tprevY = 0,\r\n\t\t\tcurrY = 0,\r\n\t\t\tdotFlag = false;\r\n\r\n\t\tconst x = 'black',\r\n\t\t\ty = 2;\r\n\r\n\t\tconst draw = () => {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(prevX, prevY);\r\n\t\t\tctx.lineTo(currX, currY);\r\n\t\t\tctx.strokeStyle = x;\r\n\t\t\tctx.lineWidth = y;\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.closePath();\r\n\t\t};\r\n\r\n\t\tconst findxy = (res, e) => {\r\n\t\t\tif (res === 'down') {\r\n\t\t\t\tprevX = currX;\r\n\t\t\t\tprevY = currY;\r\n\t\t\t\tcurrX = e.clientX - canvas.offsetLeft;\r\n\t\t\t\tcurrY = e.clientY - canvas.offsetTop;\r\n\r\n\t\t\t\tflag = true;\r\n\t\t\t\tdotFlag = true;\r\n\t\t\t\tif (dotFlag) {\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.fillStyle = x;\r\n\t\t\t\t\tctx.fillRect(currX, currY, 2, 2);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tdotFlag = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (res === 'up' || res === 'out') {\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\tif (res === 'move') {\r\n\t\t\t\tif (flag) {\r\n\t\t\t\t\tprevX = currX;\r\n\t\t\t\t\tprevY = currY;\r\n\t\t\t\t\tcurrX = e.clientX - canvas.offsetLeft;\r\n\t\t\t\t\tcurrY = e.clientY - canvas.offsetTop;\r\n\t\t\t\t\tdraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst init = (img) => {\r\n\t\t\tcanvas = document.getElementById('can');\r\n\t\t\tctx = canvas.getContext('2d');\r\n\t\t\tctx.drawImage(img, 0, 0, img.width * (400/img.height), 400);\r\n\r\n\t\t\tcanvas.addEventListener('mousemove', function (e) {\r\n\t\t\t\tfindxy('move', e);\r\n\t\t\t}, false);\r\n\t\t\tcanvas.addEventListener('mousedown', function (e) {\r\n\t\t\t\tfindxy('down', e);\r\n\t\t\t}, false);\r\n\t\t\tcanvas.addEventListener('mouseup', function (e) {\r\n\t\t\t\tfindxy('up', e);\r\n\t\t\t}, false);\r\n\t\t\tcanvas.addEventListener('mouseout', function (e) {\r\n\t\t\t\tfindxy('out', e);\r\n\t\t\t}, false);\r\n\t\t};\r\n\r\n\t\tconst { isOpen, img, editable } = this.props.modalViewImageStore;\r\n\t\tconst imgDraw = new Image();\r\n\t\timgDraw.src = img;\r\n\t\treturn (\r\n\t\t\tisOpen && (\r\n\t\t\t\teditable ?\r\n\t\t\t\t\t<div className='modal-div' onLoad={() => init(imgDraw)}>\r\n\t\t\t\t\t\t<canvas id='can' width={imgDraw.width * (400/imgDraw.height)} height={400}></canvas>\r\n\t\t\t\t\t\t<i className='fa fa-close' onClick={(): void => this.props.closeModal()} style={{ fontSize: '48px' }} />\r\n\t\t\t\t\t\t<img src={img} alt='kek' className='img' id='img' style={{ display: 'none' }} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: <div className='modal-div' >\r\n\t\t\t\t\t\t<img src={img} alt='kek' className='img' id='img' />\r\n\t\t\t\t\t\t<i className='fa fa-close' onClick={(): void => this.props.closeModal()} style={{ fontSize: '48px' }} />\r\n\t\t\t\t\t</div>)\r\n\t\t);\r\n\t}\r\n}","import { Dispatch, Action } from 'redux';\r\nimport { ADD_MESSAGE } from '../../types/actions';\r\nimport { MessageValue } from '../../types/store';\r\n\r\nexport const addMessage = (message: MessageValue) => {\r\n\treturn (dispatch: Dispatch<Action>): void => {\r\n\t\tdispatch({ type: ADD_MESSAGE, payload: message });\r\n\t};\r\n};","import { Dispatch, Action } from 'redux';\r\nimport { OPEN_MODAL, CLOSE_MODAL } from '../../types/actions';\r\n\r\nexport const openModal = (img: string, editable: boolean) => {\r\n\treturn (dispatch: Dispatch<Action>): void => {\r\n\t\tdispatch({ type: OPEN_MODAL, payload: { img, editable } });\r\n\t};\r\n};\r\n\r\nexport const closeModal = () => {\r\n\treturn (dispatch: Dispatch<Action>): void => {\r\n\t\tdispatch({ type: CLOSE_MODAL });\r\n\t};\r\n};","import React from 'react';\r\nimport MessageList from '../../components/elements/MessageList/MessageList';\r\nimport MessageDND from '../../components/elements/MessageDND/MessageDND';\r\nimport ModalViewImage from '../../components/elements/ModalViewImage/ModalViewImage';\r\nimport { ApplicationStore, ModalViewImageStore, MessagesStore, MessageValue } from '../../types/store';\r\nimport './styles.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch, AnyAction } from 'redux';\r\nimport { addMessage } from '../../redux/messages/messagesActions';\r\nimport { openModal, closeModal } from '../../redux/modalViewImage/modalViewImageActions';\r\n\r\ninterface HomeScreenProps {\r\n\tmessagesStore: MessagesStore;\r\n\tmodalViewImageStore: ModalViewImageStore;\r\n\taddMessage(Item: MessageValue): void;\r\n\topenModal(img: string, editable: boolean): void;\r\n\tcloseModal(): void;\r\n}\r\n\r\nconst mapStateToProps = (state: ApplicationStore) => ({\r\n\tmessagesStore: state.messagesStore,\r\n\tmodalViewImageStore: state.modalViewImageStore\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => ({\r\n\taddMessage: bindActionCreators(addMessage, dispatch),\r\n\topenModal: bindActionCreators(openModal, dispatch),\r\n\tcloseModal: bindActionCreators(closeModal, dispatch)\r\n});\r\n\r\nclass HomeScreen extends React.Component<HomeScreenProps> {\r\n\r\n\trender(): React.ReactElement {\r\n\t\tconst { messagesStore, modalViewImageStore, addMessage, openModal, closeModal } = this.props;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"background\">\r\n\t\t\t\t\t<header style={{ background: 'white', height: '50px' }}>Чат</header>\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t<MessageList messages={messagesStore} openModal={openModal} />\r\n\t\t\t\t\t\t\t<MessageDND addMessage={addMessage} openModal={openModal} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ModalViewImage modalViewImageStore={modalViewImageStore} closeModal={closeModal}/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);","import React, { Component } from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\nimport HomeScreen from './screen/HomeScreen';\r\n\r\nclass App extends Component {\r\n\trender(): React.ReactElement {\r\n\t\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n\t\t\t\t<HomeScreen />\r\n\t\t\t</Provider >\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();"],"sourceRoot":""}