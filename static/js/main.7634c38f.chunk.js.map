{"version":3,"sources":["types/actions.ts","redux/messages/messagesReducers.ts","redux/modalViewImage/modalViewImageReducers.ts","redux/previewImages/previewImagesReducers.ts","redux/store.ts","components/shared/Message/Message.tsx","components/elements/MessageList/MessageList.tsx","components/elements/MessageInput/MessageInput.tsx","utils/index.ts","components/elements/MessageDND/MessageDND.tsx","components/elements/ModalViewImage/ModalViewImage.tsx","redux/messages/messagesActions.ts","redux/modalViewImage/modalViewImageActions.ts","redux/previewImages/previewImagesActions.ts","screen/HomeScreen/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ADD_MESSAGE","OPEN_MODAL","CLOSE_MODAL","ADD_FILE_PREVIEW","CHANGE_FILE_PREVIEW","DELETE_FILE_PREVIEW","CLEAR_FILES_PREVIEW","initialState","isOpen","img","id","editable","persistedReducer","combineReducers","messagesStore","state","action","type","payload","modalViewImageStore","previewImageStorage","file","newState","Object","assign","logger","createLogger","middleWares","compose","applyMiddleware","reduxThunk","promise","store","createStore","Message","imgs","className","this","props","message","text","style","maxHeight","display","files","keys","forEach","key","reader","FileReader","readAsDataURL","onloadend","Date","now","setState","prevState","concat","src","result","alt","onClick","openModal","String","React","PureComponent","MessageList","values","messages","map","MessageInput","handleChange","e","target","value","handleSubmit","preventDefault","length","addMessage","clearFiles","onSubmit","multiple","accept","onChange","handleFiles","htmlFor","fontSize","autoComplete","placeholder","filesToImage","Promise","resolve","reject","promises","push","onerror","error","all","then","success","catch","err","MessageDND","handlerFunction","handleDrop","dataTransfer","uploadFile","addFilePreview","Math","floor","random","viewImage","modalViewImage","JSON","stringify","clearFilesPreview","position","width","maxWidth","deleteFilePreview","right","top","stopPropagation","dropArea","document","getElementById","highlight","classList","add","unhighlight","remove","eventName","addEventListener","preventDefaults","ModalViewImage","canvas","ctx","flag","prevX","currX","prevY","currY","x","findxy","res","clientX","offsetLeft","clientY","offsetTop","beginPath","fillStyle","fillRect","closePath","moveTo","lineTo","strokeStyle","lineWidth","stroke","imgDraw","Image","onLoad","getContext","drawImage","height","init","closeModal","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","dataURLToFile","toDataURL","changeFilePreview","dispatch","HomeScreen","background","Component","connect","bindActionCreators","App","rel","href","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7634c38f.chunk.js","sourcesContent":["export const ADD_MESSAGE = 'ADD_MESSAGE';\n\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const ADD_FILE_PREVIEW = 'ADD_FILE_PREVIEW';\nexport const CHANGE_FILE_PREVIEW = 'CHANGE_FILE_PREVIEW';\nexport const DELETE_FILE_PREVIEW = 'DELETE_FILE_PREVIEW';\nexport const CLEAR_FILES_PREVIEW = 'CLEAR_FILES_PREVIEW';","import { ADD_MESSAGE } from '../../types/actions';\nimport { MessagesStore } from '../../types/store';\n\nconst initialState: MessagesStore = {};\n\nexport function messagesReducer(state = initialState, action): MessagesStore {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\tcase ADD_MESSAGE:\n\t\treturn {\n\t\t\t[payload.id]: payload,\n\t\t\t...state\n\t\t};\n\tdefault:\n\t\treturn state;\n\t}\n}","import { OPEN_MODAL, CLOSE_MODAL } from '../../types/actions';\nimport { ModalViewImageStore } from '../../types/store';\n\nconst initialState: ModalViewImageStore = {\n\tisOpen: false,\n\timg: null,\n\tid: null,\n\teditable: false\n};\n\nexport function modalViewImageReducer(state = initialState, action): ModalViewImageStore {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\tcase OPEN_MODAL:\n\t\treturn {\n\t\t\tisOpen: true,\n\t\t\timg: payload.img,\n\t\t\tid: payload.id,\n\t\t\teditable: payload.editable\n\t\t};\n\tcase CLOSE_MODAL:\n\t\treturn {\n\t\t\tisOpen: false,\n\t\t\timg: null,\n\t\t\tid: null,\n\t\t\teditable: false\n\t\t};\n\tdefault:\n\t\treturn state;\n\t}\n}","import { ADD_FILE_PREVIEW, CHANGE_FILE_PREVIEW, DELETE_FILE_PREVIEW, CLEAR_FILES_PREVIEW } from '../../types/actions';\nimport { PreviewImageStorage } from '../../types/store';\n\nconst initialState: PreviewImageStorage = {};\n\nexport function previewImagesReducer(state = initialState, action): PreviewImageStorage {\n\tconst { type, payload } = action;\n\tswitch (type) {\n\tcase ADD_FILE_PREVIEW: {\n\t\treturn {\n\t\t\t...state,\n\t\t\t[payload.id]: payload.file\n\t\t};\n\t}\n\tcase CHANGE_FILE_PREVIEW:\n\t\treturn {\n\t\t\t...state,\n\t\t\t[payload.id]: payload.file\n\t\t};\n\tcase DELETE_FILE_PREVIEW: {\n\t\tconst newState = Object.assign({}, state);\n\t\tdelete newState[payload.id];\n\t\treturn {\n\t\t\t...newState\n\t\t};\n\t}\n\tcase CLEAR_FILES_PREVIEW:\n\t\treturn {};\n\tdefault:\n\t\treturn state;\n\t}\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport reduxThunk from 'redux-thunk';\nimport promise from 'redux-promise';\n\nimport { messagesReducer } from './messages/messagesReducers';\nimport { modalViewImageReducer } from './modalViewImage/modalViewImageReducers';\nimport { previewImagesReducer } from './previewImages/previewImagesReducers';\n\nconst persistedReducer = combineReducers({\n\tmessagesStore: messagesReducer,\n\tmodalViewImageStore: modalViewImageReducer,\n\tpreviewImageStorage: previewImagesReducer\n});\n\nconst logger = createLogger();\nconst middleWares = compose(applyMiddleware(reduxThunk, promise, logger));\n\nconst store = createStore(\n\tpersistedReducer,\n\tmiddleWares,\n);\n\nexport { store };","import React from 'react';\nimport { MessageValue } from '../../../types/store';\nimport './Message.css';\n\ninterface MessageProps {\n\tmessage: MessageValue;\n\topenModal(img: string, editable: boolean): void;\n}\n\ninterface MessageState {\n\timgs: Array<React.ReactElement>;\n}\n\nexport default class Message extends React.PureComponent<MessageProps, MessageState> {\n\tstate = {\n\t\timgs: []\n\t}\n\trender(): React.ReactElement {\n\t\treturn (\n\t\t\t<div className=\"bodyMessage\">\n\t\t\t\t<div className=\"textMessage\">\n\t\t\t\t\t{this.props.message.text}\n\t\t\t\t\t<div style={{\n\t\t\t\t\t\tmaxHeight: '100px',\n\t\t\t\t\t\tdisplay: 'flex'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{this.state.imgs}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tcomponentDidMount(): void {\n\t\tconst { files } = this.props.message;\n\t\tObject.keys(files).forEach(\n\t\t\tkey => {\n\t\t\t\tconst reader = new FileReader();\n\t\t\t\treader.readAsDataURL(files[key]);\n\t\t\t\treader.onloadend = (): void => {\n\t\t\t\t\tconst id = Date.now();\n\t\t\t\t\tthis.setState(prevState => ({\n\t\t\t\t\t\timgs: prevState.imgs.concat(\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`${reader.result}`}\n\t\t\t\t\t\t\t\tclassName=\"imageMessage\"\n\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tonClick={(): void => this.props.openModal(String(reader.result), false)} />)\n\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t}\n\t\t);\n\t}\n}","import React from 'react';\nimport Message from '../../shared/Message/Message';\nimport { MessagesStore } from '../../../types/store';\nimport './MessageList.css';\n\ninterface MessageListProps {\n\tmessages: MessagesStore;\n\topenModal(img: string, editable: boolean): void;\n}\n\nexport default class MessageList extends React.PureComponent<MessageListProps> {\n\trender(): React.ReactElement {\n\t\treturn (\n\t\t\t<div className=\"divMessageList\">\n\t\t\t\t{Object.values(this.props.messages).map(message =>\n\t\t\t\t\t<Message message={message} key={message.id} openModal={this.props.openModal}/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from 'react';\nimport { MessageValue, PreviewImageStorage } from '../../../types/store';\nimport './MessageInput.css';\n\ninterface MessageInputProps {\n\taddMessage(message: MessageValue): void;\n\thandleFiles(files): void;\n\tclearFiles?(): void;\n\tfiles?: PreviewImageStorage;\n}\n\ninterface MessageInputState {\n\ttext: string;\n}\n\nexport default class MessageInput extends React.PureComponent<MessageInputProps, MessageInputState> {\n\tstate = { text: '' };\n\n\thandleChange = (e): void => {\n\t\tthis.setState({ text: e.target.value });\n\t}\n\n\thandleSubmit = (e): void => {\n\t\te.preventDefault();\n\t\tif (!(this.state.text.length || Object.keys(this.props.files).length)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = { text: this.state.text, id: Date.now(), files: this.props.files };\n\t\tthis.props.addMessage(message);\n\n\t\tthis.setState({\n\t\t\ttext: ''\n\t\t});\n\t\tthis.props.clearFiles();\n\t}\n\n\trender(): React.ReactElement {\n\t\treturn (\n\t\t\t<form className=\"form\" onSubmit={this.handleSubmit}>\n\t\t\t\t<input type=\"file\" id=\"fileElem\" multiple accept=\"image/*\" onChange={this.props.handleFiles} />\n\t\t\t\t<label className=\"button\" htmlFor=\"fileElem\">\n\t\t\t\t\t<i className=\"fa fa-paperclip\" style={{ fontSize: '24px' }} />\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\tplaceholder='Напишите сообщение...'\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t/>\n\t\t\t\t<button className=\"send\" onClick={this.handleSubmit} >\n\t\t\t\t\t<i className=\"fa fa-send-o\" style={{ fontSize: '24px' }} />\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t);\n\t}\n}","import { PreviewImageStorage } from '../types/store';\n\nexport const dataURLToFile = (dataurl, filename) => {\n\tconst arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\n\t\tbstr = atob(arr[1]);\n\tlet n = bstr.length;\n\tconst u8arr = new Uint8Array(n);\n\twhile (n--) {\n\t\tu8arr[n] = bstr.charCodeAt(n);\n\t}\n\treturn new File([u8arr], filename, { type: mime });\n};\n\nexport const filesToImage = (file: PreviewImageStorage) => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst promises = [];\n\t\tObject.keys(file).forEach(\n\t\t\tkey => {\n\t\t\t\tpromises.push(\n\t\t\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\treader.readAsDataURL(file[key]);\n\t\t\t\t\t\treader.onloadend = () => {\n\t\t\t\t\t\t\tresolve({ file: reader.result, id: key });\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.onerror = () => {\n\t\t\t\t\t\t\treject(reader.error);\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tPromise.all(promises).then(\n\t\t\tsuccess => resolve(success)\n\t\t).catch(\n\t\t\terr => reject(err)\n\t\t);\n\t});\n};","import React from 'react';\nimport { PreviewImageStorage, MessageValue } from '../../../types/store';\nimport MessageInput from '../MessageInput/MessageInput';\nimport './MessageDND.css';\nimport { filesToImage } from '../../../utils';\n\ninterface MessageDNDProps {\n\taddMessage(message: MessageValue): void;\n\taddFilePreview(id: number, file: File): void;\n\topenModal(img: string, editable: boolean, id: number): void;\n\tclearFilesPreview(): void;\n\tdeleteFilePreview(id: number): void;\n\tmodalViewImage: PreviewImageStorage;\n}\n\ninterface MessageDNDState {\n\tfiles: Array<{ id: number; file: any }>;\n}\n\nexport default class MessageDND extends React.PureComponent<MessageDNDProps, MessageDNDState> {\n\tstate = {\n\t\tfiles: []\n\t}\n\n\thandlerFunction = (e): void => {\n\t\te.preventDefault();\n\t}\n\n\thandleDrop = (e): void => {\n\t\tconst dt = e.dataTransfer;\n\t\tconst files = dt.files;\n\t\tthis.uploadFile(files);\n\t};\n\n\thandleFiles = (files): void => {\n\t\tthis.uploadFile(files.target.files);\n\t\tfiles.target.value = null;\n\t}\n\n\tuploadFile = (files: Array<File>) => {\n\t\tfiles = [...files];\n\t\tfiles.forEach((file) => {\n\t\t\tthis.props.addFilePreview(Math.floor(Math.random() * 100000), file);\n\t\t});\n\t}\n\n\tviewImage = (modalViewImage) => {\n\t\tfilesToImage(modalViewImage).then(\n\t\t\tfiles => {\n\t\t\t\tif (JSON.stringify(this.state.files) !== JSON.stringify(files)) {\n\t\t\t\t\tthis.setState({ files: files as any });\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\trender(): React.ReactElement {\n\t\treturn (\n\t\t\t<div id=\"drop-area\">\n\t\t\t\t<MessageInput\n\t\t\t\t\thandleFiles={this.handleFiles}\n\t\t\t\t\taddMessage={this.props.addMessage}\n\t\t\t\t\tclearFiles={this.props.clearFilesPreview}\n\t\t\t\t\tfiles={this.props.modalViewImage}\n\t\t\t\t/>\n\t\t\t\t<div id=\"gallery\">\n\t\t\t\t\t{this.state.files.map(({ file, id }) => (<div\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tclassName=\"image\"\n\t\t\t\t\t\tstyle={{position: 'relative'}}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={file}\n\t\t\t\t\t\t\tstyle={{width: '100%', maxWidth: '100px'}}\n\t\t\t\t\t\t\tonClick={(): void => this.props.openModal(file, true, id)} />\n\t\t\t\t\t\t<button onClick={() => this.props.deleteFilePreview(id)} style={{ position: 'absolute', right: '0px', top: '0px' }} >X</button>\n\t\t\t\t\t</div>)\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tpreventDefaults(e): void {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t}\n\n\tcomponentDidMount(): void {\n\t\tconst dropArea = document.getElementById('drop-area');\n\n\t\tfunction highlight(): void {\n\t\t\tdropArea.classList.add('highlight');\n\t\t}\n\t\tfunction unhighlight(): void {\n\t\t\tdropArea.classList.remove('highlight');\n\t\t}\n\n\t\t['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\n\t\t\tdropArea.addEventListener(eventName, this.preventDefaults, false);\n\t\t});\n\t\t['dragenter', 'dragover'].forEach(eventName => {\n\t\t\tdropArea.addEventListener(eventName, highlight, false);\n\t\t});\n\t\t['dragleave', 'drop'].forEach(eventName => {\n\t\t\tdropArea.addEventListener(eventName, unhighlight, false);\n\t\t});\n\t\tdropArea.addEventListener('drop', this.handleDrop, false);\n\t}\n\tcomponentDidUpdate(): void {\n\t\tthis.viewImage(this.props.modalViewImage);\n\t}\n}","import React from 'react';\nimport { ModalViewImageStore } from '../../../types/store';\nimport { dataURLToFile } from '../../../utils';\nimport './ModalViewImage.css';\n\ninterface ModalViewImageProps {\n\tmodalViewImageStore: ModalViewImageStore;\n\tchangeFilePreview(id: number, file: File): void;\n\tcloseModal(): void;\n}\n\nexport default class ModalViewImage extends React.PureComponent<ModalViewImageProps> {\n\trender(): React.ReactElement {\n\t\tlet canvas, ctx, flag = false,\n\t\t\tprevX = 0,\n\t\t\tcurrX = 0,\n\t\t\tprevY = 0,\n\t\t\tcurrY = 0,\n\t\t\tdotFlag = false;\n\n\t\tconst x = 'black',\n\t\t\ty = 2;\n\n\t\t\n\n\t\tconst draw = () => {\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(prevX, prevY);\n\t\t\tctx.lineTo(currX, currY);\n\t\t\tctx.strokeStyle = x;\n\t\t\tctx.lineWidth = y;\n\t\t\tctx.stroke();\n\t\t\tctx.closePath();\n\t\t};\n\n\t\tconst findxy = (res, e) => {\n\t\t\tif (res === 'down') {\n\t\t\t\tprevX = currX;\n\t\t\t\tprevY = currY;\n\t\t\t\tcurrX = e.clientX - canvas.offsetLeft;\n\t\t\t\tcurrY = e.clientY - canvas.offsetTop;\n\n\t\t\t\tflag = true;\n\t\t\t\tdotFlag = true;\n\t\t\t\tif (dotFlag) {\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.fillStyle = x;\n\t\t\t\t\tctx.fillRect(currX, currY, 2, 2);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tdotFlag = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (res === 'up' || res === 'out') {\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\tif (res === 'move') {\n\t\t\t\tif (flag) {\n\t\t\t\t\tprevX = currX;\n\t\t\t\t\tprevY = currY;\n\t\t\t\t\tcurrX = e.clientX - canvas.offsetLeft;\n\t\t\t\t\tcurrY = e.clientY - canvas.offsetTop;\n\t\t\t\t\tdraw();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst init = (img) => {\n\t\t\tcanvas = document.getElementById('can');\n\t\t\tctx = canvas.getContext('2d');\n\t\t\tctx.drawImage(img, 0, 0, img.width * (400 / img.height), 400);\n\n\t\t\tcanvas.addEventListener('mousemove', function (e) {\n\t\t\t\tfindxy('move', e);\n\t\t\t}, false);\n\t\t\tcanvas.addEventListener('mousedown', function (e) {\n\t\t\t\tfindxy('down', e);\n\t\t\t}, false);\n\t\t\tcanvas.addEventListener('mouseup', function (e) {\n\t\t\t\tfindxy('up', e);\n\t\t\t}, false);\n\t\t\tcanvas.addEventListener('mouseout', function (e) {\n\t\t\t\tfindxy('out', e);\n\t\t\t}, false);\n\t\t};\n\n\t\tconst save = () => {\n\t\t\tconst dataURL = canvas.toDataURL();\n\t\t\tconst file = dataURLToFile(dataURL, 'newFile.png');\n\t\t\tthis.props.changeFilePreview(this.props.modalViewImageStore.id, file);\n\t\t};\n\n\t\tconst { isOpen, img, editable } = this.props.modalViewImageStore;\n\t\tconst imgDraw = new Image();\n\t\timgDraw.src = img;\n\t\treturn (\n\t\t\tisOpen && (\n\t\t\t\teditable ?\n\t\t\t\t\t<div className='modal-div' onLoad={() => init(imgDraw)}>\n\t\t\t\t\t\t<canvas id='can' width={imgDraw.width * (400 / imgDraw.height)} height={400}></canvas>\n\t\t\t\t\t\t<i className='fa fa-close' onClick={(): void => this.props.closeModal()} style={{ fontSize: '48px' }} />\n\t\t\t\t\t\t<img src={img} alt='kek' className='img' id='img' style={{ display: 'none' }} />\n\t\t\t\t\t\t<button onClick={save} >Сохранить</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t: <div className='modal-div' >\n\t\t\t\t\t\t<img src={img} alt='kek' className='img' id='img' />\n\t\t\t\t\t\t<i className='fa fa-close' onClick={(): void => this.props.closeModal()} style={{ fontSize: '48px' }} />\n\t\t\t\t\t</div>)\n\t\t);\n\t}\n}","import { Dispatch, Action } from 'redux';\nimport { ADD_MESSAGE } from '../../types/actions';\nimport { MessageValue } from '../../types/store';\n\nexport const addMessage = (message: MessageValue) => {\n\treturn (dispatch: Dispatch<Action>): void => {\n\t\tdispatch({ type: ADD_MESSAGE, payload: message });\n\t};\n};","import { Dispatch, Action } from 'redux';\nimport { OPEN_MODAL, CLOSE_MODAL } from '../../types/actions';\n\nexport const openModal = (img: string, editable: boolean, id: number) => {\n\treturn (dispatch: Dispatch<Action>): void => {\n\t\tdispatch({ type: OPEN_MODAL, payload: { img, editable, id } });\n\t};\n};\n\nexport const closeModal = () => {\n\treturn (dispatch: Dispatch<Action>): void => {\n\t\tdispatch({ type: CLOSE_MODAL });\n\t};\n};","import { Dispatch, Action } from 'redux';\nimport { ADD_FILE_PREVIEW, CHANGE_FILE_PREVIEW, DELETE_FILE_PREVIEW, CLEAR_FILES_PREVIEW } from '../../types/actions';\n\nexport const addFilePreview = (id: number, file: File) => {\n\treturn (dispatch: Dispatch<Action>): void => {\n\t\tdispatch({ type: ADD_FILE_PREVIEW, payload: { id, file } });\n\t};\n};\n\nexport const changeFilePreview = (id: number, file: File) => {\n\treturn (dispatch: Dispatch<Action>): void => {\n\t\tdispatch({ type: CHANGE_FILE_PREVIEW, payload: { id, file } });\n\t};\n};\n\nexport const deleteFilePreview = (id: number) => {\n\treturn (dispatch: Dispatch<Action>): void => {\n\t\tdispatch({ type: DELETE_FILE_PREVIEW, payload: { id } });\n\t};\n};\n\nexport const clearFilesPreview = () => {\n\treturn (dispatch: Dispatch<Action>): void => {\n\t\tdispatch({ type: CLEAR_FILES_PREVIEW });\n\t};\n};","import React from 'react';\nimport MessageList from '../../components/elements/MessageList/MessageList';\nimport MessageDND from '../../components/elements/MessageDND/MessageDND';\nimport ModalViewImage from '../../components/elements/ModalViewImage/ModalViewImage';\nimport { ApplicationStore, MessagesStore, PreviewImageStorage, ModalViewImageStore, MessageValue } from '../../types/store';\nimport './styles.css';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators, Dispatch, AnyAction } from 'redux';\nimport { addMessage } from '../../redux/messages/messagesActions';\nimport { openModal, closeModal } from '../../redux/modalViewImage/modalViewImageActions';\nimport { addFilePreview, changeFilePreview, deleteFilePreview, clearFilesPreview } from '../../redux/previewImages/previewImagesActions';\n\ninterface HomeScreenProps {\n\tmessagesStore: MessagesStore;\n\tpreviewImageStorage: PreviewImageStorage;\n\tmodalViewImageStore: ModalViewImageStore;\n\taddMessage(Item: MessageValue): void;\n\topenModal(img: string, editable: boolean): void;\n\tcloseModal(): void;\n\taddFilePreview(id: number, file: File): void;\n\tchangeFilePreview(id: number, file: File): void;\n\tdeleteFilePreview(id: number): void;\n\tclearFilesPreview(): void;\n}\n\nconst mapStateToProps = (state: ApplicationStore) => ({\n\tmessagesStore: state.messagesStore,\n\tmodalViewImageStore: state.modalViewImageStore,\n\tpreviewImageStorage: state.previewImageStorage\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => ({\n\taddMessage: bindActionCreators(addMessage, dispatch),\n\topenModal: bindActionCreators(openModal, dispatch),\n\tcloseModal: bindActionCreators(closeModal, dispatch),\n\taddFilePreview: bindActionCreators(addFilePreview, dispatch),\n\tchangeFilePreview: bindActionCreators(changeFilePreview, dispatch),\n\tdeleteFilePreview: bindActionCreators(deleteFilePreview, dispatch),\n\tclearFilesPreview: bindActionCreators(clearFilesPreview, dispatch)\n});\n\nclass HomeScreen extends React.Component<HomeScreenProps> {\n\n\trender(): React.ReactElement {\n\t\tconst { messagesStore, previewImageStorage, modalViewImageStore,\n\t\t\tclearFilesPreview, changeFilePreview, addMessage, addFilePreview, deleteFilePreview, openModal, closeModal } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"background\">\n\t\t\t\t\t<header style={{ background: 'white', height: '50px' }}>Чат</header>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t<MessageList messages={messagesStore} openModal={openModal} />\n\t\t\t\t\t\t\t<MessageDND\n\t\t\t\t\t\t\t\taddMessage={addMessage}\n\t\t\t\t\t\t\t\taddFilePreview={addFilePreview}\n\t\t\t\t\t\t\t\tdeleteFilePreview={deleteFilePreview}\n\t\t\t\t\t\t\t\tclearFilesPreview={clearFilesPreview}\n\t\t\t\t\t\t\t\topenModal={openModal}\n\t\t\t\t\t\t\t\tmodalViewImage={previewImageStorage}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<ModalViewImage modalViewImageStore={modalViewImageStore} closeModal={closeModal} changeFilePreview={changeFilePreview}/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);","import React, { Component } from 'react';\n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport HomeScreen from './screen/HomeScreen';\n\nclass App extends Component {\n\trender(): React.ReactElement {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n\t\t\t\t<HomeScreen />\n\t\t\t</Provider >\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();"],"sourceRoot":""}