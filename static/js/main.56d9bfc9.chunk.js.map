{"version":3,"sources":["types/actions.ts","redux/messages/messagesReducers.ts","redux/modalViewImage/modalViewImageReducers.ts","redux/previewImages/previewImagesReducers.ts","redux/store.ts","components/shared/Message/Message.tsx","components/elements/MessageList/MessageList.tsx","components/elements/MessageInput/MessageInput.tsx","utils/index.ts","components/elements/MessageDND/MessageDND.tsx","components/elements/ModalViewImage/ModalViewImage.tsx","redux/messages/messagesActions.ts","redux/modalViewImage/modalViewImageActions.ts","redux/previewImages/previewImagesActions.ts","screen/HomeScreen/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ADD_MESSAGE","OPEN_MODAL","CLOSE_MODAL","ADD_FILE_PREVIEW","CHANGE_FILE_PREVIEW","DELETE_FILE_PREVIEW","CLEAR_FILES_PREVIEW","initialState","isOpen","img","id","editable","persistedReducer","combineReducers","messagesStore","state","action","type","payload","modalViewImageStore","previewImageStorage","file","newState","Object","assign","logger","createLogger","middleWares","compose","applyMiddleware","reduxThunk","promise","store","createStore","Message","imgs","className","this","props","message","text","files","keys","forEach","key","reader","FileReader","readAsDataURL","onloadend","Date","now","setState","prevState","concat","src","result","alt","onClick","openModal","String","React","PureComponent","MessageList","values","messages","map","MessageInput","handleChange","e","target","value","handleSubmit","preventDefault","length","addMessage","clearFiles","onSubmit","multiple","accept","onChange","handleFiles","htmlFor","style","fontSize","autoComplete","placeholder","filesToImage","Promise","resolve","reject","promises","push","onerror","error","all","then","success","catch","err","MessageDND","handlerFunction","handleDrop","dataTransfer","uploadFile","addFilePreview","Math","floor","random","viewImage","modalViewImage","JSON","stringify","clearFilesPreview","stopPropagation","dropArea","document","getElementById","highlight","classList","add","unhighlight","remove","eventName","addEventListener","preventDefaults","ModalViewImage","canvas","ctx","flag","prevX","currX","prevY","currY","x","findxy","res","clientX","offsetLeft","clientY","offsetTop","beginPath","fillStyle","fillRect","closePath","moveTo","lineTo","strokeStyle","lineWidth","stroke","imgDraw","Image","onLoad","getContext","drawImage","width","height","init","closeModal","display","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","dataURLToFile","toDataURL","changeFilePreview","dispatch","deleteFilePreview","HomeScreen","background","Component","connect","bindActionCreators","App","rel","href","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.56d9bfc9.chunk.js","sourcesContent":["export const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nexport const OPEN_MODAL = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\r\n\r\nexport const ADD_FILE_PREVIEW = 'ADD_FILE_PREVIEW';\r\nexport const CHANGE_FILE_PREVIEW = 'CHANGE_FILE_PREVIEW';\r\nexport const DELETE_FILE_PREVIEW = 'DELETE_FILE_PREVIEW';\r\nexport const CLEAR_FILES_PREVIEW = 'CLEAR_FILES_PREVIEW';","import { ADD_MESSAGE } from '../../types/actions';\r\nimport { MessagesStore } from '../../types/store';\r\n\r\nconst initialState: MessagesStore = {};\r\n\r\nexport function messagesReducer(state = initialState, action): MessagesStore {\r\n\tconst { type, payload } = action;\r\n\tswitch (type) {\r\n\tcase ADD_MESSAGE:\r\n\t\treturn {\r\n\t\t\t[payload.id]: payload,\r\n\t\t\t...state\r\n\t\t};\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}","import { OPEN_MODAL, CLOSE_MODAL } from '../../types/actions';\r\nimport { ModalViewImageStore } from '../../types/store';\r\n\r\nconst initialState: ModalViewImageStore = {\r\n\tisOpen: false,\r\n\timg: null,\r\n\tid: null,\r\n\teditable: false\r\n};\r\n\r\nexport function modalViewImageReducer(state = initialState, action): ModalViewImageStore {\r\n\tconst { type, payload } = action;\r\n\tswitch (type) {\r\n\tcase OPEN_MODAL:\r\n\t\treturn {\r\n\t\t\tisOpen: true,\r\n\t\t\timg: payload.img,\r\n\t\t\tid: payload.id,\r\n\t\t\teditable: payload.editable\r\n\t\t};\r\n\tcase CLOSE_MODAL:\r\n\t\treturn {\r\n\t\t\tisOpen: false,\r\n\t\t\timg: null,\r\n\t\t\tid: null,\r\n\t\t\teditable: false\r\n\t\t};\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}","import { ADD_FILE_PREVIEW, CHANGE_FILE_PREVIEW, DELETE_FILE_PREVIEW, CLEAR_FILES_PREVIEW } from '../../types/actions';\r\nimport { PreviewImageStorage } from '../../types/store';\r\n\r\nconst initialState: PreviewImageStorage = {};\r\n\r\nexport function previewImagesReducer(state = initialState, action): PreviewImageStorage {\r\n\tconst { type, payload } = action;\r\n\tswitch (type) {\r\n\tcase ADD_FILE_PREVIEW: {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\t[payload.id]: payload.file\r\n\t\t};\r\n\t}\r\n\tcase CHANGE_FILE_PREVIEW:\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\t[payload.id]: payload.file\r\n\t\t};\r\n\tcase DELETE_FILE_PREVIEW: {\r\n\t\tconst newState = Object.assign({}, state);\r\n\t\tdelete newState[payload.id];\r\n\t\treturn {\r\n\t\t\t...newState\r\n\t\t};\r\n\t}\r\n\tcase CLEAR_FILES_PREVIEW:\r\n\t\treturn {};\r\n\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport reduxThunk from 'redux-thunk';\r\nimport promise from 'redux-promise';\r\n\r\nimport { messagesReducer } from './messages/messagesReducers';\r\nimport { modalViewImageReducer } from './modalViewImage/modalViewImageReducers';\r\nimport { previewImagesReducer } from './previewImages/previewImagesReducers';\r\n\r\nconst persistedReducer = combineReducers({\r\n\tmessagesStore: messagesReducer,\r\n\tmodalViewImageStore: modalViewImageReducer,\r\n\tpreviewImageStorage: previewImagesReducer\r\n});\r\n\r\nconst logger = createLogger();\r\nconst middleWares = compose(applyMiddleware(reduxThunk, promise, logger));\r\n\r\nconst store = createStore(\r\n\tpersistedReducer,\r\n\tmiddleWares,\r\n);\r\n\r\nexport { store };","import React from 'react';\r\nimport { MessageValue } from '../../../types/store';\r\nimport './Message.css';\r\n\r\ninterface MessageProps {\r\n\tmessage: MessageValue;\r\n\topenModal(img: string, editable: boolean): void;\r\n}\r\n\r\ninterface MessageState {\r\n\timgs: Array<React.ReactElement>;\r\n}\r\n\r\nexport default class Message extends React.PureComponent<MessageProps, MessageState> {\r\n\tstate = {\r\n\t\timgs: []\r\n\t}\r\n\trender(): React.ReactElement {\r\n\t\treturn (\r\n\t\t\t<div className=\"bodyMessage\">\r\n\t\t\t\t<div className=\"textMessage\">{this.props.message.text}\r\n\t\t\t\t\t{this.state.imgs}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tconst { files } = this.props.message;\r\n\t\tObject.keys(files).forEach(\r\n\t\t\tkey => {\r\n\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\treader.readAsDataURL(files[key]);\r\n\t\t\t\treader.onloadend = (): void => {\r\n\t\t\t\t\tconst id = Date.now();\r\n\t\t\t\t\tthis.setState(prevState => ({\r\n\t\t\t\t\t\timgs: prevState.imgs.concat(\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={`${reader.result}`}\r\n\t\t\t\t\t\t\t\tclassName=\"imageMessage\"\r\n\t\t\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\tonClick={(): void => this.props.openModal(String(reader.result), false)} />)\r\n\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport Message from '../../shared/Message/Message';\r\nimport { MessagesStore } from '../../../types/store';\r\nimport './MessageList.css';\r\n\r\ninterface MessageListProps {\r\n\tmessages: MessagesStore;\r\n\topenModal(img: string, editable: boolean): void;\r\n}\r\n\r\nexport default class MessageList extends React.PureComponent<MessageListProps> {\r\n\trender(): React.ReactElement {\r\n\t\treturn (\r\n\t\t\t<div className=\"divMessageList\">\r\n\t\t\t\t{Object.values(this.props.messages).map(message =>\r\n\t\t\t\t\t<Message message={message} key={message.id} openModal={this.props.openModal}/>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport { MessageValue, PreviewImageStorage } from '../../../types/store';\r\nimport './MessageInput.css';\r\n\r\ninterface MessageInputProps {\r\n\taddMessage(message: MessageValue): void;\r\n\thandleFiles(files): void;\r\n\tclearFiles?(): void;\r\n\tfiles?: PreviewImageStorage;\r\n}\r\n\r\ninterface MessageInputState {\r\n\ttext: string;\r\n}\r\n\r\nexport default class MessageInput extends React.PureComponent<MessageInputProps, MessageInputState> {\r\n\tstate = { text: '' };\r\n\r\n\thandleChange = (e): void => {\r\n\t\tthis.setState({ text: e.target.value });\r\n\t}\r\n\r\n\thandleSubmit = (e): void => {\r\n\t\te.preventDefault();\r\n\t\tif (!(this.state.text.length || Object.keys(this.props.files).length)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst message = { text: this.state.text, id: Date.now(), files: this.props.files };\r\n\t\tthis.props.addMessage(message);\r\n\r\n\t\tthis.setState({\r\n\t\t\ttext: ''\r\n\t\t});\r\n\t\tthis.props.clearFiles();\r\n\t}\r\n\r\n\trender(): React.ReactElement {\r\n\t\treturn (\r\n\t\t\t<form className=\"form\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t<input type=\"file\" id=\"fileElem\" multiple accept=\"image/*\" onChange={this.props.handleFiles} />\r\n\t\t\t\t<label className=\"button\" htmlFor=\"fileElem\">\r\n\t\t\t\t\t<i className=\"fa fa-paperclip\" style={{ fontSize: '24px' }} />\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\tclassName=\"input\"\r\n\t\t\t\t\tplaceholder='Напишите сообщение...'\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\tvalue={this.state.text}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"send\" onClick={this.handleSubmit} >\r\n\t\t\t\t\t<i className=\"fa fa-send-o\" style={{ fontSize: '24px' }} />\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}","import { PreviewImageStorage } from '../types/store';\r\n\r\nexport const dataURLToFile = (dataurl, filename) => {\r\n\tconst arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n\t\tbstr = atob(arr[1]);\r\n\tlet n = bstr.length;\r\n\tconst u8arr = new Uint8Array(n);\r\n\twhile (n--) {\r\n\t\tu8arr[n] = bstr.charCodeAt(n);\r\n\t}\r\n\treturn new File([u8arr], filename, { type: mime });\r\n};\r\n\r\nexport const filesToImage = (file: PreviewImageStorage) => {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst promises = [];\r\n\t\tObject.keys(file).forEach(\r\n\t\t\tkey => {\r\n\t\t\t\tpromises.push(\r\n\t\t\t\t\tnew Promise((resolve, reject) => {\r\n\t\t\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\t\t\treader.readAsDataURL(file[key]);\r\n\t\t\t\t\t\treader.onloadend = () => {\r\n\t\t\t\t\t\t\tresolve({ file: reader.result, id: key });\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\treader.onerror = () => {\r\n\t\t\t\t\t\t\treject(reader.error);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tPromise.all(promises).then(\r\n\t\t\tsuccess => resolve(success)\r\n\t\t).catch(\r\n\t\t\terr => reject(err)\r\n\t\t);\r\n\t});\r\n};","import React from 'react';\r\nimport { PreviewImageStorage, MessageValue } from '../../../types/store';\r\nimport MessageInput from '../MessageInput/MessageInput';\r\nimport './MessageDND.css';\r\nimport { filesToImage } from '../../../utils';\r\n\r\ninterface MessageDNDProps {\r\n\taddMessage(message: MessageValue): void;\r\n\taddFilePreview(id: number, file: File): void;\r\n\topenModal(img: string, editable: boolean, id: number): void;\r\n\tclearFilesPreview(): void;\r\n\tmodalViewImage: PreviewImageStorage;\r\n}\r\n\r\ninterface MessageDNDState {\r\n\tfiles: Array<{ id: number; file: any }>;\r\n}\r\n\r\nexport default class MessageDND extends React.PureComponent<MessageDNDProps, MessageDNDState> {\r\n\tstate = {\r\n\t\tfiles: []\r\n\t}\r\n\r\n\thandlerFunction = (e): void => {\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\thandleDrop = (e): void => {\r\n\t\tconst dt = e.dataTransfer;\r\n\t\tconst files = dt.files;\r\n\t\tthis.uploadFile(files);\r\n\t};\r\n\r\n\thandleFiles = (files): void => {\r\n\t\tthis.uploadFile(files.target.files);\r\n\t\tfiles.target.value = null;\r\n\t}\r\n\r\n\tuploadFile = (files: Array<File>) => {\r\n\t\tfiles = [...files];\r\n\t\tfiles.forEach((file) => {\r\n\t\t\tthis.props.addFilePreview(Math.floor(Math.random() * 100000), file);\r\n\t\t});\r\n\t}\r\n\r\n\tviewImage = (modalViewImage) => {\r\n\t\tfilesToImage(modalViewImage).then(\r\n\t\t\tfiles => {\r\n\t\t\t\tif (JSON.stringify(this.state.files) !== JSON.stringify(files)) {\r\n\t\t\t\t\tthis.setState({ files: files as any });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\trender(): React.ReactElement {\r\n\t\treturn (\r\n\t\t\t<div id=\"drop-area\">\r\n\t\t\t\t<MessageInput\r\n\t\t\t\t\thandleFiles={this.handleFiles}\r\n\t\t\t\t\taddMessage={this.props.addMessage}\r\n\t\t\t\t\tclearFiles={this.props.clearFilesPreview}\r\n\t\t\t\t\tfiles={this.props.modalViewImage}\r\n\t\t\t\t/>\r\n\t\t\t\t<div id=\"gallery\">\r\n\t\t\t\t\t{this.state.files.map(({ file, id }) => (<img\r\n\t\t\t\t\t\tsrc={file}\r\n\t\t\t\t\t\tclassName=\"image\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\tonClick={(): void => this.props.openModal(file, true, id)} />)\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpreventDefaults(e): void {\r\n\t\te.preventDefault();\r\n\t\te.stopPropagation();\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tconst dropArea = document.getElementById('drop-area');\r\n\r\n\t\tfunction highlight(): void {\r\n\t\t\tdropArea.classList.add('highlight');\r\n\t\t}\r\n\t\tfunction unhighlight(): void {\r\n\t\t\tdropArea.classList.remove('highlight');\r\n\t\t}\r\n\r\n\t\t['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {\r\n\t\t\tdropArea.addEventListener(eventName, this.preventDefaults, false);\r\n\t\t});\r\n\t\t['dragenter', 'dragover'].forEach(eventName => {\r\n\t\t\tdropArea.addEventListener(eventName, highlight, false);\r\n\t\t});\r\n\t\t['dragleave', 'drop'].forEach(eventName => {\r\n\t\t\tdropArea.addEventListener(eventName, unhighlight, false);\r\n\t\t});\r\n\t\tdropArea.addEventListener('drop', this.handleDrop, false);\r\n\t}\r\n\tcomponentDidUpdate(): void {\r\n\t\tthis.viewImage(this.props.modalViewImage);\r\n\t}\r\n}","import React from 'react';\r\nimport { ModalViewImageStore } from '../../../types/store';\r\nimport { dataURLToFile } from '../../../utils';\r\nimport './ModalViewImage.css';\r\n\r\ninterface ModalViewImageProps {\r\n\tmodalViewImageStore: ModalViewImageStore;\r\n\tchangeFilePreview(id: number, file: File): void;\r\n\tcloseModal(): void;\r\n}\r\n\r\nexport default class ModalViewImage extends React.PureComponent<ModalViewImageProps> {\r\n\trender(): React.ReactElement {\r\n\t\tlet canvas, ctx, flag = false,\r\n\t\t\tprevX = 0,\r\n\t\t\tcurrX = 0,\r\n\t\t\tprevY = 0,\r\n\t\t\tcurrY = 0,\r\n\t\t\tdotFlag = false;\r\n\r\n\t\tconst x = 'black',\r\n\t\t\ty = 2;\r\n\r\n\t\t\r\n\r\n\t\tconst draw = () => {\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(prevX, prevY);\r\n\t\t\tctx.lineTo(currX, currY);\r\n\t\t\tctx.strokeStyle = x;\r\n\t\t\tctx.lineWidth = y;\r\n\t\t\tctx.stroke();\r\n\t\t\tctx.closePath();\r\n\t\t};\r\n\r\n\t\tconst findxy = (res, e) => {\r\n\t\t\tif (res === 'down') {\r\n\t\t\t\tprevX = currX;\r\n\t\t\t\tprevY = currY;\r\n\t\t\t\tcurrX = e.clientX - canvas.offsetLeft;\r\n\t\t\t\tcurrY = e.clientY - canvas.offsetTop;\r\n\r\n\t\t\t\tflag = true;\r\n\t\t\t\tdotFlag = true;\r\n\t\t\t\tif (dotFlag) {\r\n\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\tctx.fillStyle = x;\r\n\t\t\t\t\tctx.fillRect(currX, currY, 2, 2);\r\n\t\t\t\t\tctx.closePath();\r\n\t\t\t\t\tdotFlag = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (res === 'up' || res === 'out') {\r\n\t\t\t\tflag = false;\r\n\t\t\t}\r\n\t\t\tif (res === 'move') {\r\n\t\t\t\tif (flag) {\r\n\t\t\t\t\tprevX = currX;\r\n\t\t\t\t\tprevY = currY;\r\n\t\t\t\t\tcurrX = e.clientX - canvas.offsetLeft;\r\n\t\t\t\t\tcurrY = e.clientY - canvas.offsetTop;\r\n\t\t\t\t\tdraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst init = (img) => {\r\n\t\t\tcanvas = document.getElementById('can');\r\n\t\t\tctx = canvas.getContext('2d');\r\n\t\t\tctx.drawImage(img, 0, 0, img.width * (400 / img.height), 400);\r\n\r\n\t\t\tcanvas.addEventListener('mousemove', function (e) {\r\n\t\t\t\tfindxy('move', e);\r\n\t\t\t}, false);\r\n\t\t\tcanvas.addEventListener('mousedown', function (e) {\r\n\t\t\t\tfindxy('down', e);\r\n\t\t\t}, false);\r\n\t\t\tcanvas.addEventListener('mouseup', function (e) {\r\n\t\t\t\tfindxy('up', e);\r\n\t\t\t}, false);\r\n\t\t\tcanvas.addEventListener('mouseout', function (e) {\r\n\t\t\t\tfindxy('out', e);\r\n\t\t\t}, false);\r\n\t\t};\r\n\r\n\t\tconst save = () => {\r\n\t\t\tconst dataURL = canvas.toDataURL();\r\n\t\t\tconst file = dataURLToFile(dataURL, 'newFile.png');\r\n\t\t\tthis.props.changeFilePreview(this.props.modalViewImageStore.id, file);\r\n\t\t};\r\n\r\n\t\tconst { isOpen, img, editable } = this.props.modalViewImageStore;\r\n\t\tconst imgDraw = new Image();\r\n\t\timgDraw.src = img;\r\n\t\treturn (\r\n\t\t\tisOpen && (\r\n\t\t\t\teditable ?\r\n\t\t\t\t\t<div className='modal-div' onLoad={() => init(imgDraw)}>\r\n\t\t\t\t\t\t<canvas id='can' width={imgDraw.width * (400 / imgDraw.height)} height={400}></canvas>\r\n\t\t\t\t\t\t<i className='fa fa-close' onClick={(): void => this.props.closeModal()} style={{ fontSize: '48px' }} />\r\n\t\t\t\t\t\t<img src={img} alt='kek' className='img' id='img' style={{ display: 'none' }} />\r\n\t\t\t\t\t\t<button onClick={save} >Сохранить</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: <div className='modal-div' >\r\n\t\t\t\t\t\t<img src={img} alt='kek' className='img' id='img' />\r\n\t\t\t\t\t\t<i className='fa fa-close' onClick={(): void => this.props.closeModal()} style={{ fontSize: '48px' }} />\r\n\t\t\t\t\t</div>)\r\n\t\t);\r\n\t}\r\n}","import { Dispatch, Action } from 'redux';\r\nimport { ADD_MESSAGE } from '../../types/actions';\r\nimport { MessageValue } from '../../types/store';\r\n\r\nexport const addMessage = (message: MessageValue) => {\r\n\treturn (dispatch: Dispatch<Action>): void => {\r\n\t\tdispatch({ type: ADD_MESSAGE, payload: message });\r\n\t};\r\n};","import { Dispatch, Action } from 'redux';\r\nimport { OPEN_MODAL, CLOSE_MODAL } from '../../types/actions';\r\n\r\nexport const openModal = (img: string, editable: boolean, id: number) => {\r\n\treturn (dispatch: Dispatch<Action>): void => {\r\n\t\tdispatch({ type: OPEN_MODAL, payload: { img, editable, id } });\r\n\t};\r\n};\r\n\r\nexport const closeModal = () => {\r\n\treturn (dispatch: Dispatch<Action>): void => {\r\n\t\tdispatch({ type: CLOSE_MODAL });\r\n\t};\r\n};","import { Dispatch, Action } from 'redux';\r\nimport { ADD_FILE_PREVIEW, CHANGE_FILE_PREVIEW, DELETE_FILE_PREVIEW, CLEAR_FILES_PREVIEW } from '../../types/actions';\r\n\r\nexport const addFilePreview = (id: number, file: File) => {\r\n\treturn (dispatch: Dispatch<Action>): void => {\r\n\t\tdispatch({ type: ADD_FILE_PREVIEW, payload: { id, file } });\r\n\t};\r\n};\r\n\r\nexport const changeFilePreview = (id: number, file: File) => {\r\n\treturn (dispatch: Dispatch<Action>): void => {\r\n\t\tdispatch({ type: CHANGE_FILE_PREVIEW, payload: { id, file } });\r\n\t};\r\n};\r\n\r\nexport const deleteFilePreview = (id: number) => {\r\n\treturn (dispatch: Dispatch<Action>): void => {\r\n\t\tdispatch({ type: DELETE_FILE_PREVIEW, payload: { id } });\r\n\t};\r\n};\r\n\r\nexport const clearFilesPreview = () => {\r\n\treturn (dispatch: Dispatch<Action>): void => {\r\n\t\tdispatch({ type: CLEAR_FILES_PREVIEW });\r\n\t};\r\n};","import React from 'react';\r\nimport MessageList from '../../components/elements/MessageList/MessageList';\r\nimport MessageDND from '../../components/elements/MessageDND/MessageDND';\r\nimport ModalViewImage from '../../components/elements/ModalViewImage/ModalViewImage';\r\nimport { ApplicationStore, MessagesStore, PreviewImageStorage, ModalViewImageStore, MessageValue } from '../../types/store';\r\nimport './styles.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch, AnyAction } from 'redux';\r\nimport { addMessage } from '../../redux/messages/messagesActions';\r\nimport { openModal, closeModal } from '../../redux/modalViewImage/modalViewImageActions';\r\nimport { addFilePreview, changeFilePreview, deleteFilePreview, clearFilesPreview } from '../../redux/previewImages/previewImagesActions';\r\n\r\ninterface HomeScreenProps {\r\n\tmessagesStore: MessagesStore;\r\n\tpreviewImageStorage: PreviewImageStorage;\r\n\tmodalViewImageStore: ModalViewImageStore;\r\n\taddMessage(Item: MessageValue): void;\r\n\topenModal(img: string, editable: boolean): void;\r\n\tcloseModal(): void;\r\n\taddFilePreview(id: number, file: File): void;\r\n\tchangeFilePreview(id: number, file: File): void;\r\n\tdeleteFilePreview(id: number): void;\r\n\tclearFilesPreview(): void;\r\n}\r\n\r\nconst mapStateToProps = (state: ApplicationStore) => ({\r\n\tmessagesStore: state.messagesStore,\r\n\tmodalViewImageStore: state.modalViewImageStore,\r\n\tpreviewImageStorage: state.previewImageStorage\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => ({\r\n\taddMessage: bindActionCreators(addMessage, dispatch),\r\n\topenModal: bindActionCreators(openModal, dispatch),\r\n\tcloseModal: bindActionCreators(closeModal, dispatch),\r\n\taddFilePreview: bindActionCreators(addFilePreview, dispatch),\r\n\tchangeFilePreview: bindActionCreators(changeFilePreview, dispatch),\r\n\tdeleteFilePreview: bindActionCreators(deleteFilePreview, dispatch),\r\n\tclearFilesPreview: bindActionCreators(clearFilesPreview, dispatch)\r\n});\r\n\r\nclass HomeScreen extends React.Component<HomeScreenProps> {\r\n\r\n\trender(): React.ReactElement {\r\n\t\tconst { messagesStore, previewImageStorage, modalViewImageStore,\r\n\t\t\tclearFilesPreview, changeFilePreview, addMessage, addFilePreview, openModal, closeModal } = this.props;\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"background\">\r\n\t\t\t\t\t<header style={{ background: 'white', height: '50px' }}>Чат</header>\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t\t<MessageList messages={messagesStore} openModal={openModal} />\r\n\t\t\t\t\t\t\t<MessageDND\r\n\t\t\t\t\t\t\t\taddMessage={addMessage}\r\n\t\t\t\t\t\t\t\taddFilePreview={addFilePreview}\r\n\t\t\t\t\t\t\t\tclearFilesPreview={clearFilesPreview}\r\n\t\t\t\t\t\t\t\topenModal={openModal}\r\n\t\t\t\t\t\t\t\tmodalViewImage={previewImageStorage}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ModalViewImage modalViewImageStore={modalViewImageStore} closeModal={closeModal} changeFilePreview={changeFilePreview}/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeScreen);","import React, { Component } from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\nimport HomeScreen from './screen/HomeScreen';\r\n\r\nclass App extends Component {\r\n\trender(): React.ReactElement {\r\n\t\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n\t\t\t\t<HomeScreen />\r\n\t\t\t</Provider >\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();"],"sourceRoot":""}